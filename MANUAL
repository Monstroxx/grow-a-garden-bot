# üöÄ Manuelles Raspberry Pi Deployment

## SSH-Verbindung herstellen

Da wir ein PuTTY-Key haben, nutze **PuTTY** f√ºr die Verbindung:

1. **PuTTY √∂ffnen**
2. **Host**: `192.168.171.100`
3. **Port**: `22`
4. **Connection ‚Üí SSH ‚Üí Auth ‚Üí Browse**: `C:\Users\jonas\Desktop\ssh-keys\putty.privat.pihole.ppk`
5. **Open** klicken
6. **Login**: `stefan`

## 1. Aktuellen Bot-Status pr√ºfen

```bash
sudo systemctl status discord-bot.service
ps aux | grep python
```

## 2. Alten Bot stoppen (Backup)

```bash
# Status merken
sudo systemctl status discord-bot.service > old_bot_status.txt

# Bot stoppen
sudo systemctl stop discord-bot.service

# Verzeichnis finden
sudo systemctl cat discord-bot.service
```

## 3. System-Requirements pr√ºfen

```bash
# RAM und CPU pr√ºfen
free -h
lscpu

# Chromium installieren
sudo apt update
sudo apt install chromium-browser chromium-chromedriver -y

# Python-Version pr√ºfen
python3 --version
pip3 --version
```

## 4. Neue Dependencies installieren

```bash
# Selenium installieren
pip3 install selenium webdriver-manager

# Andere neue Dependencies
pip3 install aiohttp beautifulsoup4 python-dotenv discord.py
```

## 5. Bot-Code √ºbertragen

### Option A: Git (Empfohlen)
```bash
# Auf deinem PC: Push zu GitHub/GitLab
cd C:\Users\jonas\Desktop\projekte\grow-a-garden-bot
git push origin feat/selenium-cloudflare-fix

# Auf Raspberry Pi: Pull von Git
cd /path/to/bot
git pull origin feat/selenium-cloudflare-fix
```

### Option B: SCP/SFTP
```bash
# Mit WinSCP oder FileZilla:
# Dateien √ºbertragen:
# - gag-aleart.py
# - requirements.txt  
# - .env (mit deinen Discord-Credentials)
```

## 6. Chrome-Pfad f√ºr Raspberry Pi anpassen

√Ñndere in `gag-aleart.py` die Chrome-Pfade:

```python
chrome_paths = [
    "/usr/bin/chromium-browser",        # Raspberry Pi Chromium
    "/usr/bin/chromium",                # Alternative
    "/usr/bin/google-chrome",           # Falls Chrome installiert
    # Alte Windows-Pfade entfernt
]
```

## ‚ö†Ô∏è WICHTIG: Raspberry Pi Anpassungen

### Chrome-Optionen erweitern:
```python
chrome_options.add_argument("--no-first-run")
chrome_options.add_argument("--disable-default-apps") 
chrome_options.add_argument("--disable-dev-tools")
chrome_options.add_argument("--single-process")      # Wichtig f√ºr RPi
chrome_options.add_argument("--memory-pressure-off") # Memory-Optimierung
```

## 7. Service anpassen

```bash
# Service-Datei bearbeiten
sudo nano /etc/systemd/system/discord-bot.service

# Sicherstellen:
# - Richtige Python-Version (python3)
# - Richtige Pfade
# - Genug Memory
# - Restart-Policy
```

## 8. Test-Lauf

```bash
# Manueller Test
cd /path/to/bot
python3 gag-aleart.py

# Bei Erfolg: Service starten
sudo systemctl daemon-reload
sudo systemctl start discord-bot.service
sudo systemctl status discord-bot.service
```

## üö® Fallback-Plan falls Selenium zu langsam

Falls Selenium auf Raspberry Pi zu ressourcenintensiv ist:

### Option 1: Nur aiohttp-Fallback
```python
# In gag-aleart.py: Selenium deaktivieren
# Fallback auf aiohttp (wird zwar blockiert, aber Bot l√§uft)
```

### Option 2: Remote-Selenium
- Selenium auf deinem PC laufen lassen
- RPi-Bot macht HTTP-Requests an deinen PC
- Hybrid-Setup: RPi f√ºr Discord, PC f√ºr Web-Scraping

Soll ich dir bei einem dieser Schritte helfen?
